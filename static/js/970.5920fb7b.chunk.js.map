{"version":3,"file":"static/js/970.5920fb7b.chunk.js","mappings":"0RAKaA,EAAOC,EAAAA,GAAAA,KAAH,kYAgBJC,EAAeD,EAAAA,GAAAA,IAAH,6FAKZE,EAAiBF,EAAAA,GAAAA,IAAH,8OAadG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,oJAQJK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,oJAQLO,GAAWP,EAAAA,EAAAA,IAAOQ,EAAAA,IAAPR,CAAH,oJAQRS,EAAQT,EAAAA,GAAAA,MAAH,4NAaLU,EAAQV,EAAAA,GAAAA,MAAH,iEAILW,EAASX,EAAAA,GAAAA,OAAH,wfA0BNY,GAAeZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,2lB,SC5BzB,EAhEyB,WACvB,IAAIc,GAAgBC,EAAAA,EAAAA,MAChBC,GAAiBD,EAAAA,EAAAA,MACjBE,GAAoBF,EAAAA,EAAAA,MAExB,OACE,iCACE,0CACA,UAAChB,EAAD,YACE,4BACE,UAACE,EAAD,YACE,SAACS,EAAD,CAAOQ,QAASJ,EAAhB,mBACA,UAACZ,EAAD,YACE,SAACC,EAAD,KACA,SAACM,EAAD,CACEU,KAAK,OACLC,KAAK,OACLC,GAAIP,EACJQ,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,WAId,UAACxB,EAAD,YACE,SAACS,EAAD,CAAOQ,QAASF,EAAhB,oBACA,UAACd,EAAD,YACE,SAACG,EAAD,KACA,SAACI,EAAD,CACEU,KAAK,QACLC,KAAK,QACLC,GAAIL,EACJM,YAAY,gBACZC,QAAQ,0CACRE,UAAQ,WAId,UAACxB,EAAD,YACE,SAACS,EAAD,CAAOQ,QAASD,EAAhB,uBACA,UAACf,EAAD,YACE,SAACK,EAAD,KACA,SAACE,EAAD,CACEU,KAAK,WACLC,KAAK,WACLC,GAAIJ,EACJK,YAAY,WACZC,QAAQ,uCACRC,MAAM,8GACNC,UAAQ,cAKhB,SAACd,EAAD,CAAQQ,KAAK,SAAb,8BAEF,4BACE,yDACA,SAACP,EAAD,CAAcc,GAAG,WAAjB,4BCvEKC,EAAU3B,EAAAA,GAAAA,QAAH,sMASP4B,EAAc5B,EAAAA,GAAAA,IAAH,2ICAxB,EATqB,WACnB,OACE,SAAC2B,EAAD,WACE,SAACC,EAAD,WACE,SAAC,EAAD,SCFR,EAHyB,WACvB,OAAO,SAAC,EAAD","sources":["components/Registration/RegistrationForm/RegistrationForm.style.js","components/Registration/RegistrationForm/RegistrationForm.jsx","components/Registration/Registration.style.js","components/Registration/Registration.jsx","Pages/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { TfiEmail } from 'react-icons/tfi';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { FiUser } from 'react-icons/fi';\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-bottom:30px;\n  min-height: 400px;\n  min-width: 300px;\n  padding: 10px;\n  background: #fff;\n  border: 1px solid #eee;\n  border-radius: 4px;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n\n}\n`;\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 1px;\n  width: 300px;\n  border-radius: 4px;\n  border: 1px solid #dbdbdb;\n  &:focus,\n  &:hover {\n    border: 1px solid #b3b3b3;\n  }\n`;\nexport const User = styled(FiUser)`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  margin-left: 10px;\n  transform: translate(-0, -50%);\n  color: #b3b3b3;\n`;\nexport const Email = styled(TfiEmail)`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  margin-left: 10px;\n  transform: translate(-0, -50%);\n  color: #b3b3b3;\n`;\nexport const Password = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  margin-left: 10px;\n  transform: translate(-0, -50%);\n  color: #b3b3b3;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  height: 30px;\n  border: none;\n  background-color: white;\n  padding-left: 40px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  &::placeholder {\n        color: #b3b3b3;\n`;\nexport const Label = styled.label`\n  color: black;\n  margin-bottom: 10px;\n`;\nexport const Button = styled.button`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 23px;\n  text-transform: uppercase;\n  color: white;\n  text-decoration: none;\n  padding: 4px 16px;\n  border-radius: 4px;\n\n  border: 1px solid #2e2d2d;\n  background-color: #2e2d2d;\n  color: #c6ede6;\n  cursor: pointer;\n  transition-duration: 0.25s;\n  &:disabled {\n    opacity: 0;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    color: #c6ede6;\n    box-shadow: inset 0 0 0 1px #c6ede6;\n  }\n`;\nexport const NavigateLink = styled(NavLink)`\n  margin-left: 10px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 23px;\n  text-transform: uppercase;\n  background-color: #c6ede6;\n  text-decoration: none;\n  padding: 8px 16px;\n\n  border: 1px solid #2e2d2d;\n  border-radius: 4px;\n  background-color: #2e2d2d;\n  color: #c6ede6;\n  cursor: pointer;\n  transition-duration: 0.25s;\n  &:disabled {\n    opacity: 0;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    border: 1px solid #c6ede6;\n    background-color: #c6ede6;\n    color: #2e2d2d;\n    box-shadow: inset 0 0 0 1px #2e2d2d;\n  }\n`;\n","import { nanoid } from 'nanoid';\n\nimport {\n  Form,\n  InputWrapper,\n  NavigateLink,\n  Button,\n  Input,\n  Label,\n  InputContainer,\n  User,\n  Email,\n  Password,\n} from './RegistrationForm.style';\nconst RegistrationForm = () => {\n  let contactNameId = nanoid();\n  let contactEmailId = nanoid();\n  let contactPasswordId = nanoid();\n\n  return (\n    <>\n      <h2>Registartion</h2>\n      <Form>\n        <div>\n          <InputWrapper>\n            <Label htmlFor={contactNameId}>Name</Label>\n            <InputContainer>\n              <User />\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id={contactNameId}\n                placeholder=\"Name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              />\n            </InputContainer>\n          </InputWrapper>\n          <InputWrapper>\n            <Label htmlFor={contactEmailId}>Email</Label>\n            <InputContainer>\n              <Email />\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id={contactEmailId}\n                placeholder=\"Email address\"\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n                required\n              />\n            </InputContainer>\n          </InputWrapper>\n          <InputWrapper>\n            <Label htmlFor={contactPasswordId}>Password</Label>\n            <InputContainer>\n              <Password />\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id={contactPasswordId}\n                placeholder=\"Password\"\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                title=\"Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters\"\n                required\n              />\n            </InputContainer>\n          </InputWrapper>\n        </div>\n        <Button type=\"submit\">Registration</Button>\n      </Form>\n      <div>\n        <span>Already registered? Go to</span>\n        <NavigateLink to=\"/sign-in\">Sign In</NavigateLink>\n      </div>\n    </>\n  );\n};\nexport default RegistrationForm;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #1e1e1e;\n  margin: 30px 16px;\n  border: 1px solid transparent;\n  border-radius: 30px;\n`;\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n`;\n","import RegistrationForm from 'components/Registration/RegistrationForm/RegistrationForm';\nimport { Section, FormWrapper } from './Registration.style';\nconst Registration = () => {\n  return (\n    <Section>\n      <FormWrapper>\n        <RegistrationForm />\n      </FormWrapper>\n    </Section>\n  );\n};\nexport default Registration;\n","import Registration from 'components/Registration/Registration';\nconst RegistrationPage = () => {\n  return <Registration />;\n};\nexport default RegistrationPage;\n"],"names":["Form","styled","InputWrapper","InputContainer","User","FiUser","Email","TfiEmail","Password","RiLockPasswordLine","Input","Label","Button","NavigateLink","NavLink","contactNameId","nanoid","contactEmailId","contactPasswordId","htmlFor","type","name","id","placeholder","pattern","title","required","to","Section","FormWrapper"],"sourceRoot":""}